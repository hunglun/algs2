See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED (0 errors, 1 warning)
API:          PASSED

Findbugs:     PASSED
PMD:          PASSED
Checkstyle:   FAILED (0 errors, 106 warnings)

Correctness:  6/13 tests passed
Memory:       0/3 tests passed
Timing:       6/9 tests passed

Aggregate score: 51.03%
[Compilation: 5%, API: 5%, Findbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
4.9K Jan  6 05:40 BoggleSolver.java
9.1K Jan  6 05:40 EnglishTrieST.java


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac BoggleSolver.java
*-----------------------------------------------------------
./EnglishTrieST.java:36: warning: [unchecked] unchecked cast
        return (Value) x.val;
                        ^
  required: Value
  found:    Object
  where Value is a type-variable:
    Value extends Object declared in class EnglishTrieST
1 warning


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
BoggleSolver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% findbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
BoggleSolver.java:10: StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time). [AvoidStringBufferField]
BoggleSolver.java:13: The private instance (or static) variable 'allValidWords' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
BoggleSolver.java:14: The private instance (or static) variable 'st' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
BoggleSolver.java:27: String.indexOf(char) is faster than String.indexOf(String). [UseIndexOfChar]
PMD ends with 4 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] BoggleSolver.java:11:27: To specify an array type, put the square brackets before the variable name, e.g., 'String[] args' instead of 'String args[]'. [ArrayTypeStyle]
[WARN] BoggleSolver.java:17:43: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:18:7: 'if' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:20:14: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:20:15: '=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:21:7: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:26:8: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:26:14: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:26:15: '=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:26:19: '<' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:26:44: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:28:11: '(' is followed by whitespace. [ParenPad]
[WARN] BoggleSolver.java:30:11: 'else' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:30:11: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:31:13: '(' is followed by whitespace. [ParenPad]
[WARN] BoggleSolver.java:33:13: 'else' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:33:13: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:35:59: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:40:8: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:40:31: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:41:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:41:11: '!=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:41:13: '!=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:42:18: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:45:21: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:46:20: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:47:30: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:53:54: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:55:7: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:57:46: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:10: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:58:16: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:17: '=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:19: ';' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:58:20: '<' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:21: '<' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:39: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:59:12: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:59:18: '=' is not preceded with whitespace. [WhitespaceAround]
...
Checkstyle ends with 0 errors and 106 warnings.


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of BoggleSolver
*-----------------------------------------------------------
Tests 1-9 create one BoggleSolver object corresponding to the specified
dictionary and call getAllValidWords() with several different boards
as arguments.

Running 13 total tests.

Test 1: check getAllValidWords() on two fixed 4-by-4 boards given in assignment
  * dictionary = dictionary-algs4.txt; board = board4x4.txt
  * dictionary = dictionary-algs4.txt; board = board-q.txt
==> passed

Test 2: check getAllValidWords() on fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board4x4.txt
  * dictionary = dictionary-yawl.txt; board = board-points1.txt
  * dictionary = dictionary-yawl.txt; board = board-points2.txt
  * dictionary = dictionary-yawl.txt; board = board-points3.txt
  * dictionary = dictionary-yawl.txt; board = board-points4.txt
  * dictionary = dictionary-yawl.txt; board = board-points5.txt
==> passed

Test 3: check getAllValidWords() on more fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board-points100.txt
  * dictionary = dictionary-yawl.txt; board = board-points200.txt
  * dictionary = dictionary-yawl.txt; board = board-points300.txt
  * dictionary = dictionary-yawl.txt; board = board-points400.txt
  * dictionary = dictionary-yawl.txt; board = board-points500.txt
  * dictionary = dictionary-yawl.txt; board = board-points750.txt
  * dictionary = dictionary-yawl.txt; board = board-points1000.txt
  * dictionary = dictionary-yawl.txt; board = board-points1250.txt
  * dictionary = dictionary-yawl.txt; board = board-points1500.txt
  * dictionary = dictionary-yawl.txt; board = board-points2000.txt
==> passed

Test 4: check getAllValidWords() on random Hasbro boards
  * dictionary = dictionary-yawl.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 211
    - number of entries in reference solution: 106
    - 105 extra entries in student solution, including: 'YOKE'
    - failed on trial 2 of 10
         4 4
         I  T  R  R  
         E  E  F  R  
         A  Z  A  I  
         T  E  C  A

  * dictionary = dictionary-yawl.txt; board = 50 random Hasbro boards
    - number of entries in student   solution: 302
    - number of entries in reference solution: 95
    - 207 extra entries in student solution, including: 'ZETA'
    - failed on trial 1 of 50
         4 4
         V  R  H  O  
         O  A  A  U  
         H  I  B  T  
         T  Z  I  L

  * dictionary = dictionary-yawl.txt; board = 100 random Hasbro boards
    - number of entries in student   solution: 652
    - number of entries in reference solution: 356
    - 296 extra entries in student solution, including: 'ZIT'
    - failed on trial 1 of 100
         4 4
         Y  S  I  U  
         N  R  T  N  
         E  O  D  O  
         M  S  A  S

==> FAILED

Test 5: check getAllValidWords() on high-scoring n-by-n boards
  * dictionary = dictionary-yawl.txt; board = board-points4410.txt
  * dictionary = dictionary-yawl.txt; board = board-points4527.txt
  * dictionary = dictionary-yawl.txt; board = board-points13464.txt
  * dictionary = dictionary-yawl.txt; board = board-points26539.txt
==> passed

Test 6: check getAllValidWords() on exotic boards
  * dictionary = dictionary-yawl.txt; board = board-dodo.txt
  * dictionary = dictionary-yawl.txt; board = board-noon.txt
  * dictionary = dictionary-yawl.txt; board = board-couscous.txt
  * dictionary = dictionary-yawl.txt; board = board-rotavator.txt
  * dictionary = dictionary-yawl.txt; board = board-estrangers.txt
  * dictionary = dictionary-yawl.txt; board = board-antidisestablishmentarianisms.txt
  * dictionary = dictionary-yawl.txt; board = board-dichlorodiphenyltrichloroethanes.txt
  * dictionary = dictionary-yawl.txt; board = board-pneumonoultramicroscopicsilicovolcanoconiosis.txt
==> passed

Test 7: check getAllValidWords() on boards with a Q
  * dictionary = dictionary-yawl.txt; board = board-qwerty.txt
  * dictionary = dictionary-yawl.txt; board = board-quinquevalencies.txt
  * dictionary = dictionary-yawl.txt; board = board-inconsequentially.txt
  * dictionary = dictionary-yawl.txt; board = board-qaimaqam.txt
  * dictionary = dictionary-yawl.txt; board = board-aqua.txt
  * dictionary = dictionary-yawl.txt; board = 100 random Hasbro boards
    - number of entries in student   solution: 271
    - number of entries in reference solution: 171
    - 100 extra entries in student solution, including: 'YFERE'
    - failed on trial 2 of 100
         4 4
         I  H  V  T  
         E  S  Qu H  
         N  T  E  T  
         O  B  A  E

  * dictionary = dictionary-16q.txt; board = board-9q.txt
  * dictionary = dictionary-16q.txt; board = board-16q.txt
==> FAILED

Test 8: check getAllValidWords() on random m-by-n boards
  * dictionary = dictionary-common.txt; board = 100 random 3-by-3 boards
    - number of entries in student   solution: 32
    - number of entries in reference solution: 24
    - 8 extra entries in student solution, including: 'STIR'
    - failed on trial 2 of 100
         3 3
         R  U  V  
         E  A  R  
         N  H  M

  * dictionary = dictionary-common.txt; board = 100 random 4-by-4 boards
    - number of entries in student   solution: 56
    - number of entries in reference solution: 24
    - 32 extra entries in student solution, including: 'VANE'
    - failed on trial 1 of 100
         4 4
         O  D  D  C  
         O  V  R  D  
         S  E  P  S  
         L  I  I  O

  * dictionary = dictionary-common.txt; board = 100 random 5-by-5 boards
    - number of entries in student   solution: 114
    - number of entries in reference solution: 66
    - 48 extra entries in student solution, including: 'VEIL'
    - failed on trial 1 of 100
         5 5
         E  P  E  A  Y  
         T  E  U  A  E  
         K  T  O  R  U  
         R  S  D  U  W  
         M  G  D  S  R

  * dictionary = dictionary-common.txt; board = 20 random 5-by-10 boards
    - number of entries in student   solution: 435
    - number of entries in reference solution: 350
    - 85 extra entries in student solution, including: 'YEAR'
    - failed on trial 1 of 20
         5 10
         B  O  L  H  A  P  E  T  E  M  
         T  A  R  T  A  B  A  E  O  I  
         F  G  I  L  U  R  R  R  N  I  
         S  N  I  N  A  R  S  D  O  T  
         D  O  H  E  U  T  T  W  M  R

  * dictionary = dictionary-common.txt; board = 20 random 10-by-5 boards
    - number of entries in student   solution: 607
    - number of entries in reference solution: 227
    - 380 extra entries in student solution, including: 'YARD'
    - failed on trial 1 of 20
         10 5
         B  M  D  O  C  
         S  G  D  T  E  
         I  T  A  T  T  
         I  Y  W  R  B  
         L  N  G  S  G  
         R  A  E  A  O  
         E  Y  E  D  H  
         H  N  T  L  E  
         E  E  E  G  R  
         I  D  A  X  H

==> FAILED

Test 9: check getAllValidWords() on random m-by-n boards
  * dictionary = dictionary-common.txt; board = 10 random 2-by-2 boards
    - number of entries in student   solution: 1
    - number of entries in reference solution: 0
    - 1 extra entry in student solution: 'WIN'
    - failed on trial 2 of 10
         2 2
         N  S  
         Y  N

  * dictionary = dictionary-common.txt; board = 10 random 1-by-10 boards
    - number of entries in student   solution: 2
    - number of entries in reference solution: 1
    - 1 extra entry in student solution: 'WIN'
    - failed on trial 1 of 10
         1 10
         O  E  I  S  A  D  T  H  A  S

  * dictionary = dictionary-common.txt; board = 10 random 10-by-1 boards
    - number of entries in student   solution: 4
    - number of entries in reference solution: 2
    - 2 extra entries in student solution, including: 'WIN'
    - failed on trial 1 of 10
         10 1
         H  
         R  
         D  
         E  
         E  
         U  
         H  
         E  
         E  
         P

  * dictionary = dictionary-common.txt; board = 10 random 1-by-1 boards
    - number of entries in student   solution: 4
    - number of entries in reference solution: 0
    - 4 extra entries in student solution, including: 'WIN'
    - failed on trial 1 of 10
         1 1
         R

  * dictionary = dictionary-common.txt; board = 10 random 1-by-2 boards
    - number of entries in student   solution: 4
    - number of entries in reference solution: 0
    - 4 extra entries in student solution, including: 'WIN'
    - failed on trial 1 of 10
         1 2
         O  S

  * dictionary = dictionary-common.txt; board = 10 random 2-by-1 boards
    - number of entries in student   solution: 4
    - number of entries in reference solution: 0
    - 4 extra entries in student solution, including: 'WIN'
    - failed on trial 1 of 10
         2 1
         K  
         E

==> FAILED

Test 10: check getAllValidWords() on boards with no valid words
  * dictionary = dictionary-nursery.txt; board = board-points0.txt
  * dictionary = dictionary-2letters.txt; board = board-points4410.txt
==> passed

Test 11: mutating dictionary[] after passing to BoggleSolver constructor
  * dictionary = dictionary-algs4.txt
    - student implementation mutated dictionary[]
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 25
    - number of entries in reference solution: 16
    - 9 extra entries in student solution, including: 'YET'
    - failed on trial 1 of 10
         4 4
         E  M  E  D  
         F  W  M  X  
         A  A  A  I  
         N  D  Y  P

   - student implementation did not make a defensive copy of dictionary[]

==> FAILED

Test 12: create more than one BoggleSolver object at a time
         [ BoggleSolver object 1 uses dictionary-algs4.txt   ]
         [ BoggleSolver object 2 uses dictionary-nursery.txt ]
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 17
    - number of entries in reference solution: 16
    - 1 extra entry in student solution: 'STEP'
    - failed on trial 2 of 10
         4 4
         O  M  N  U  
         J  S  T  A  
         I  Y  E  T  
         E  A  A  C

  * dictionary = dictionary-nursery.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 14
    - number of entries in reference solution: 7
    - 7 extra entries in student solution, including: 'ZANY'
    - failed on trial 2 of 10
         4 4
         H  N  E  S  
         X  U  F  O  
         W  E  N  N  
         C  A  E  L

  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 30
    - number of entries in reference solution: 13
    - 17 extra entries in student solution, including: 'YET'
    - failed on trial 1 of 10
         4 4
         I  S  M  R  
         O  U  R  O  
         S  O  R  N  
         U  H  F  G

==> FAILED

Test 13: check scoreOf() on various dictionaries
  * dictionary = dictionary-algs4.txt
    - word = 'CHAFFINCH'
    - student   score = 11
    - reference score = 0
    - failed on trial 2 of 1000

  * dictionary = dictionary-common.txt
    - word = 'RESIZING'
    - student   score = 11
    - reference score = 0
    - failed on trial 2 of 5000

  * dictionary = dictionary-shakespeare.txt
    - word = 'NUANCE'
    - student   score = 3
    - reference score = 0
    - failed on trial 3 of 10000

  * dictionary = dictionary-nursery.txt
  * dictionary = dictionary-yawl.txt
    - word = 'DOLEFULL'
    - student   score = 11
    - reference score = 0
    - failed on trial 14 of 20000

==> FAILED


Total: 6/13 tests passed!


================================================================
********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of BoggleSolver
*-----------------------------------------------------------
Running 3 total tests.

Test 1: memory with dictionary-algs4.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 494304 bytes
  * memory of student   BoggleSolver = 13648176 bytes
  * memory of reference BoggleSolver = 5135408 bytes
  * student / reference              = 2.66
==> FAILED

Test 2: memory with dictionary-shakespeare.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 1924640 bytes
  * memory of student   BoggleSolver = 45890768 bytes
  * memory of reference BoggleSolver = 17476048 bytes
  * student / reference              = 2.63
==> FAILED

Test 3: memory with dictionary-yawl.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 22583240 bytes
  * memory of student   BoggleSolver = 463827016 bytes
  * memory of reference BoggleSolver = 178546176 bytes
  * student / reference              = 2.60
==> FAILED


Total: 0/3 tests passed!

================================================================



********************************************************************************
*  TIMING
********************************************************************************

Timing BoggleSolver
*-----------------------------------------------------------
All timing tests are for random 4-by-4 boards (using the Hasbro dice).
The dictionary is specified with each test.

Running 9 total tests.

Test 1: timing constructor (must be <= 5x reference solution)
 *  dictionary-algs4.txt
    - student   solution time (in seconds): 0.03
    - reference solution time (in seconds): 0.01
    - ratio:                                2.81

==> passed

 *  dictionary-enable2k.txt
    - student   solution time (in seconds): 0.22
    - reference solution time (in seconds): 0.11
    - ratio:                                1.94

==> passed

 *  dictionary-yawl.txt
    - student   solution time (in seconds): 0.12
    - reference solution time (in seconds): 0.03
    - ratio:                                4.22

==> passed

 *  dictionary-zingarelli2005.txt
    - student   solution time (in seconds): 0.18
    - reference solution time (in seconds): 0.25
    - ratio:                                0.73

==> passed

Test 2: timing getAllValidWords() for 5.0 seconds using dictionary-yawl.txt
        (must be <= 2x reference solution)
    - reference solution calls per second: 8620.91
    - student   solution calls per second: 516.17
    - reference / student ratio:           16.70

=> passed    student <= 10000x reference
=> passed    student <=    25x reference
=> FAILED    student <=    10x reference
=> FAILED    student <=     5x reference
=> FAILED    student <=     2x reference


Total: 6/9 tests passed!


================================================================
