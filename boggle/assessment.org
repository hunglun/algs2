See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED (0 errors, 1 warning)
API:          PASSED

Findbugs:     PASSED
PMD:          PASSED
Checkstyle:   FAILED (0 errors, 102 warnings)

Correctness:  6/13 tests passed
Memory:       0/3 tests passed
Timing:       6/9 tests passed

Aggregate score: 51.03%
[Compilation: 5%, API: 5%, Findbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
4.9K Jan  6 05:20 BoggleSolver.java
9.1K Jan  6 05:20 EnglishTrieST.java


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac BoggleSolver.java
*-----------------------------------------------------------
./EnglishTrieST.java:36: warning: [unchecked] unchecked cast
        return (Value) x.val;
                        ^
  required: Value
  found:    Object
  where Value is a type-variable:
    Value extends Object declared in class EnglishTrieST
1 warning


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
BoggleSolver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% findbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
BoggleSolver.java:10: StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time). [AvoidStringBufferField]
BoggleSolver.java:13: The private instance (or static) variable 'allValidWords' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
BoggleSolver.java:14: The private instance (or static) variable 'st' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
BoggleSolver.java:27: String.indexOf(char) is faster than String.indexOf(String). [UseIndexOfChar]
PMD ends with 4 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] BoggleSolver.java:11:27: To specify an array type, put the square brackets before the variable name, e.g., 'String[] args' instead of 'String args[]'. [ArrayTypeStyle]
[WARN] BoggleSolver.java:17:43: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:18:7: 'if' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:20:14: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:20:15: '=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:21:7: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:26:8: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:26:14: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:26:15: '=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:26:19: '<' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:26:44: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:28:11: '(' is followed by whitespace. [ParenPad]
[WARN] BoggleSolver.java:30:11: 'else' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:30:11: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:31:13: '(' is followed by whitespace. [ParenPad]
[WARN] BoggleSolver.java:33:13: 'else' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:33:13: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:35:59: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:40:8: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:40:31: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:41:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:41:11: '!=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:41:13: '!=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:42:18: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:45:21: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:46:20: ',' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:47:30: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:53:54: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:55:7: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:57:46: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:10: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:58:16: '=' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:17: '=' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:19: ';' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:58:20: '<' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:21: '<' is not followed by whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:58:39: '{' is not preceded with whitespace. [WhitespaceAround]
[WARN] BoggleSolver.java:59:12: 'for' is not followed by whitespace. [WhitespaceAfter]
[WARN] BoggleSolver.java:59:18: '=' is not preceded with whitespace. [WhitespaceAround]
...
Checkstyle ends with 0 errors and 102 warnings.


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of BoggleSolver
*-----------------------------------------------------------
Tests 1-9 create one BoggleSolver object corresponding to the specified
dictionary and call getAllValidWords() with several different boards
as arguments.

Running 13 total tests.

Test 1: check getAllValidWords() on two fixed 4-by-4 boards given in assignment
  * dictionary = dictionary-algs4.txt; board = board4x4.txt
  * dictionary = dictionary-algs4.txt; board = board-q.txt
==> passed

Test 2: check getAllValidWords() on fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board4x4.txt
  * dictionary = dictionary-yawl.txt; board = board-points1.txt
  * dictionary = dictionary-yawl.txt; board = board-points2.txt
  * dictionary = dictionary-yawl.txt; board = board-points3.txt
  * dictionary = dictionary-yawl.txt; board = board-points4.txt
  * dictionary = dictionary-yawl.txt; board = board-points5.txt
==> passed

Test 3: check getAllValidWords() on more fixed 4-by-4 boards
  * dictionary = dictionary-yawl.txt; board = board-points100.txt
  * dictionary = dictionary-yawl.txt; board = board-points200.txt
  * dictionary = dictionary-yawl.txt; board = board-points300.txt
  * dictionary = dictionary-yawl.txt; board = board-points400.txt
  * dictionary = dictionary-yawl.txt; board = board-points500.txt
  * dictionary = dictionary-yawl.txt; board = board-points750.txt
  * dictionary = dictionary-yawl.txt; board = board-points1000.txt
  * dictionary = dictionary-yawl.txt; board = board-points1250.txt
  * dictionary = dictionary-yawl.txt; board = board-points1500.txt
  * dictionary = dictionary-yawl.txt; board = board-points2000.txt
==> passed

Test 4: check getAllValidWords() on random Hasbro boards
  * dictionary = dictionary-yawl.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 321
    - number of entries in reference solution: 232
    - 89 extra entries in student solution, including: 'WIENER'
    - failed on trial 2 of 10
         4 4
         N  E  S  M  
         H  I  T  E  
         T  R  F  Y  
         N  R  A  O

  * dictionary = dictionary-yawl.txt; board = 50 random Hasbro boards
    - number of entries in student   solution: 390
    - number of entries in reference solution: 74
    - 316 extra entries in student solution, including: 'YETIS'
    - failed on trial 1 of 50
         4 4
         I  S  T  N  
         N  S  X  H  
         O  L  W  W  
         A  R  E  C

  * dictionary = dictionary-yawl.txt; board = 100 random Hasbro boards
    - number of entries in student   solution: 487
    - number of entries in reference solution: 111
    - 376 extra entries in student solution, including: 'YETIS'
    - failed on trial 1 of 100
         4 4
         L  X  N  E  
         T  O  O  E  
         O  S  U  S  
         N  V  Y  T

==> FAILED

Test 5: check getAllValidWords() on high-scoring n-by-n boards
  * dictionary = dictionary-yawl.txt; board = board-points4410.txt
  * dictionary = dictionary-yawl.txt; board = board-points4527.txt
  * dictionary = dictionary-yawl.txt; board = board-points13464.txt
  * dictionary = dictionary-yawl.txt; board = board-points26539.txt
==> passed

Test 6: check getAllValidWords() on exotic boards
  * dictionary = dictionary-yawl.txt; board = board-dodo.txt
  * dictionary = dictionary-yawl.txt; board = board-noon.txt
  * dictionary = dictionary-yawl.txt; board = board-couscous.txt
  * dictionary = dictionary-yawl.txt; board = board-rotavator.txt
  * dictionary = dictionary-yawl.txt; board = board-estrangers.txt
  * dictionary = dictionary-yawl.txt; board = board-antidisestablishmentarianisms.txt
  * dictionary = dictionary-yawl.txt; board = board-dichlorodiphenyltrichloroethanes.txt
  * dictionary = dictionary-yawl.txt; board = board-pneumonoultramicroscopicsilicovolcanoconiosis.txt
==> passed

Test 7: check getAllValidWords() on boards with a Q
  * dictionary = dictionary-yawl.txt; board = board-qwerty.txt
  * dictionary = dictionary-yawl.txt; board = board-quinquevalencies.txt
    - number of entries in student   solution: 129
    - number of entries in reference solution: 130
    - 1 missing entry in student solution: 'QUA'
         4 4
         Qu L  E  N  
         I  A  X  C  
         N  V  I  E  
         Qu E  X  S

  * dictionary = dictionary-yawl.txt; board = board-inconsequentially.txt
  * dictionary = dictionary-yawl.txt; board = board-qaimaqam.txt
    - number of entries in student   solution: 7
    - number of entries in reference solution: 8
    - 1 missing entry in student solution: 'QUA'
         4 4
         Qu A  I  Qu 
         Qu Qu Qu M  
         Qu Qu Qu A  
         M  A  Qu Qu

  * dictionary = dictionary-yawl.txt; board = board-aqua.txt
    - number of entries in student   solution: 0
    - number of entries in reference solution: 1
    - 1 missing entry in student solution: 'QUA'
         4 4
         Qu U  I  T  
         X  X  X  X  
         X  X  X  X  
         A  Qu U  A

  * dictionary = dictionary-yawl.txt; board = 100 random Hasbro boards
    - number of entries in student   solution: 226
    - number of entries in reference solution: 175
    - 51 extra entries in student solution, including: 'WIS'
    - failed on trial 2 of 100
         4 4
         T  H  N  O  
         T  E  S  E  
         A  T  F  H  
         M  O  Qu E

  * dictionary = dictionary-16q.txt; board = board-9q.txt
    - number of entries in student   solution: 7
    - number of entries in reference solution: 8
    - 1 missing entry in student solution: 'QUQU'
         3 3
         Qu Qu Qu 
         Qu Qu Qu 
         Qu Qu Qu

  * dictionary = dictionary-16q.txt; board = board-16q.txt
    - number of entries in student   solution: 14
    - number of entries in reference solution: 15
    - 1 missing entry in student solution: 'QUQU'
         4 4
         Qu Qu Qu Qu 
         Qu Qu Qu Qu 
         Qu Qu Qu Qu 
         Qu Qu Qu Qu

==> FAILED

Test 8: check getAllValidWords() on random m-by-n boards
  * dictionary = dictionary-common.txt; board = 100 random 3-by-3 boards
    - number of entries in student   solution: 38
    - number of entries in reference solution: 22
    - 16 extra entries in student solution, including: 'YAH'
    - failed on trial 2 of 100
         3 3
         A  A  D  
         T  S  E  
         I  D  U

  * dictionary = dictionary-common.txt; board = 100 random 4-by-4 boards
    - number of entries in student   solution: 104
    - number of entries in reference solution: 69
    - 35 extra entries in student solution, including: 'YAH'
    - failed on trial 1 of 100
         4 4
         S  E  T  A  
         N  I  O  S  
         W  G  E  F  
         H  D  A  N

  * dictionary = dictionary-common.txt; board = 100 random 5-by-5 boards
    - number of entries in student   solution: 194
    - number of entries in reference solution: 103
    - 91 extra entries in student solution, including: 'YAH'
    - failed on trial 1 of 100
         5 5
         T  H  A  N  H  
         B  R  B  T  L  
         W  I  S  T  E  
         N  I  U  E  N  
         S  H  E  E  C

  * dictionary = dictionary-common.txt; board = 20 random 5-by-10 boards
    - number of entries in student   solution: 371
    - number of entries in reference solution: 231
    - 140 extra entries in student solution, including: 'WRIST'
    - failed on trial 1 of 20
         5 10
         O  S  H  R  D  H  M  H  Y  B  
         F  S  Y  C  L  H  L  L  A  E  
         C  Y  O  T  N  E  I  A  T  O  
         H  O  A  A  S  E  N  R  I  E  
         N  I  U  Y  T  H  H  A  G  I

  * dictionary = dictionary-common.txt; board = 20 random 10-by-5 boards
    - number of entries in student   solution: 581
    - number of entries in reference solution: 274
    - 307 extra entries in student solution, including: 'YOU'
    - failed on trial 1 of 20
         10 5
         A  O  E  D  S  
         Y  I  S  H  T  
         U  T  N  I  O  
         E  Y  I  C  S  
         S  L  B  R  T  
         D  S  L  H  L  
         S  N  I  D  T  
         E  E  L  R  E  
         R  O  R  S  A  
         T  U  T  I  M

==> FAILED

Test 9: check getAllValidWords() on random m-by-n boards
  * dictionary = dictionary-common.txt; board = 10 random 2-by-2 boards
    - number of entries in student   solution: 3
    - number of entries in reference solution: 0
    - 3 extra entries in student solution, including: 'ODE'
    - failed on trial 2 of 10
         2 2
         O  E  
         I  A

  * dictionary = dictionary-common.txt; board = 10 random 1-by-10 boards
    - number of entries in student   solution: 7
    - number of entries in reference solution: 4
    - 3 extra entries in student solution, including: 'ODE'
    - failed on trial 1 of 10
         1 10
         K  I  A  R  I  D  A  B  S  N

  * dictionary = dictionary-common.txt; board = 10 random 10-by-1 boards
    - number of entries in student   solution: 7
    - number of entries in reference solution: 0
    - 7 extra entries in student solution, including: 'RID'
    - failed on trial 1 of 10
         10 1
         A  
         N  
         F  
         M  
         I  
         E  
         E  
         Y  
         F  
         T

  * dictionary = dictionary-common.txt; board = 10 random 1-by-1 boards
    - number of entries in student   solution: 7
    - number of entries in reference solution: 0
    - 7 extra entries in student solution, including: 'RID'
    - failed on trial 1 of 10
         1 1
         D

  * dictionary = dictionary-common.txt; board = 10 random 1-by-2 boards
    - number of entries in student   solution: 7
    - number of entries in reference solution: 0
    - 7 extra entries in student solution, including: 'RID'
    - failed on trial 1 of 10
         1 2
         O  E

  * dictionary = dictionary-common.txt; board = 10 random 2-by-1 boards
    - number of entries in student   solution: 7
    - number of entries in reference solution: 0
    - 7 extra entries in student solution, including: 'RID'
    - failed on trial 1 of 10
         2 1
         H  
         E

==> FAILED

Test 10: check getAllValidWords() on boards with no valid words
  * dictionary = dictionary-nursery.txt; board = board-points0.txt
  * dictionary = dictionary-2letters.txt; board = board-points4410.txt
==> passed

Test 11: mutating dictionary[] after passing to BoggleSolver constructor
  * dictionary = dictionary-algs4.txt
    - student implementation mutated dictionary[]
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 35
    - number of entries in reference solution: 10
    - 25 extra entries in student solution, including: 'TIE'
    - failed on trial 1 of 10
         4 4
         B  A  O  L  
         H  M  W  N  
         S  I  U  R  
         E  F  V  E

   - student implementation did not make a defensive copy of dictionary[]

==> FAILED

Test 12: create more than one BoggleSolver object at a time
         [ BoggleSolver object 1 uses dictionary-algs4.txt   ]
         [ BoggleSolver object 2 uses dictionary-nursery.txt ]
  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 23
    - number of entries in reference solution: 16
    - 7 extra entries in student solution, including: 'TOY'
    - failed on trial 2 of 10
         4 4
         R  Y  S  R  
         O  H  N  O  
         A  E  R  T  
         C  H  E  I

  * dictionary = dictionary-nursery.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 24
    - number of entries in reference solution: 12
    - 12 extra entries in student solution, including: 'THIS'
    - failed on trial 2 of 10
         4 4
         V  E  P  O  
         A  T  I  P  
         T  X  N  T  
         A  L  H  E

  * dictionary = dictionary-algs4.txt; board = 10 random Hasbro boards
    - number of entries in student   solution: 25
    - number of entries in reference solution: 2
    - 23 extra entries in student solution, including: 'TREE'
    - failed on trial 1 of 10
         4 4
         E  T  R  M  
         J  T  N  Z  
         E  C  T  S  
         C  T  H  P

==> FAILED

Test 13: check scoreOf() on various dictionaries
  * dictionary = dictionary-algs4.txt
    - word = 'RESTLESS'
    - student   score = 11
    - reference score = 0
    - failed on trial 1 of 1000

  * dictionary = dictionary-common.txt
    - word = 'SEAS'
    - student   score = 1
    - reference score = 0
    - failed on trial 1 of 5000

  * dictionary = dictionary-shakespeare.txt
    - word = 'RHAPSODIC'
    - student   score = 11
    - reference score = 0
    - failed on trial 1 of 10000

  * dictionary = dictionary-nursery.txt
  * dictionary = dictionary-yawl.txt
    - word = 'ASSAILETH'
    - student   score = 11
    - reference score = 0
    - failed on trial 2 of 20000

==> FAILED


Total: 6/13 tests passed!


================================================================
********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of BoggleSolver
*-----------------------------------------------------------
Running 3 total tests.

Test 1: memory with dictionary-algs4.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 494304 bytes
  * memory of student   BoggleSolver = 13646512 bytes
  * memory of reference BoggleSolver = 5135408 bytes
  * student / reference              = 2.66
==> FAILED

Test 2: memory with dictionary-shakespeare.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 1924640 bytes
  * memory of student   BoggleSolver = 45891176 bytes
  * memory of reference BoggleSolver = 17475528 bytes
  * student / reference              = 2.63
==> FAILED

Test 3: memory with dictionary-yawl.txt (must be <= 2x reference solution)
  * memory of dictionary[]           = 22583696 bytes
  * memory of student   BoggleSolver = 464404688 bytes
  * memory of reference BoggleSolver = 179000672 bytes
  * student / reference              = 2.59
==> FAILED


Total: 0/3 tests passed!

================================================================



********************************************************************************
*  TIMING
********************************************************************************

Timing BoggleSolver
*-----------------------------------------------------------
All timing tests are for random 4-by-4 boards (using the Hasbro dice).
The dictionary is specified with each test.

Running 9 total tests.

Test 1: timing constructor (must be <= 5x reference solution)
 *  dictionary-algs4.txt
    - student   solution time (in seconds): 0.03
    - reference solution time (in seconds): 0.01
    - ratio:                                3.02

==> passed

 *  dictionary-enable2k.txt
    - student   solution time (in seconds): 0.23
    - reference solution time (in seconds): 0.12
    - ratio:                                1.94

==> passed

 *  dictionary-yawl.txt
    - student   solution time (in seconds): 0.08
    - reference solution time (in seconds): 0.03
    - ratio:                                2.95

==> passed

 *  dictionary-zingarelli2005.txt
    - student   solution time (in seconds): 0.14
    - reference solution time (in seconds): 0.21
    - ratio:                                0.65

==> passed

Test 2: timing getAllValidWords() for 5.0 seconds using dictionary-yawl.txt
        (must be <= 2x reference solution)
    - reference solution calls per second: 6635.66
    - student   solution calls per second: 523.48
    - reference / student ratio:           12.68

=> passed    student <= 10000x reference
=> passed    student <=    25x reference
=> FAILED    student <=    10x reference
=> FAILED    student <=     5x reference
=> FAILED    student <=     2x reference


Total: 6/9 tests passed!
